import path from "path";
import { writeFile } from "fs/promises";
import { z } from "zod";

// --- Zapスキーマ（簡略版） ---
const ZapSchema = z.object({
  db: z.record(z.record(z.string())),
  api: z.record(
    z.object({
      method: z.enum(["GET", "POST", "PUT", "DELETE"]),
      path: z.string(),
      handler: z.string(),
    })
  ),
});

// --- zap.ts 読み込み & パース ---
const zapPath = Bun.argv[2] || "./zap.ts";
const mod = await import(path.resolve(zapPath));
const zap = ZapSchema.parse(mod.default);

const sdkLines: string[] = [];

sdkLines.push(`// ⚡️ Auto-generated by zap generate`);
sdkLines.push(`
const BASE_URL = "http://localhost:8787"`);

sdkLines.push(`
// --- DB SDK ---`);
sdkLines.push(`export function useDB<T extends keyof typeof schema>(table: T) {
  return {
    list: async (): Promise<any[]> => {
      return fetch(\`\${BASE_URL}/db/\${table}\`).then(res => res.json())
    },
    insert: async (data: any): Promise<any> => {
      return fetch(\`\${BASE_URL}/db/\${table}\`, {
        method: "POST",
        body: JSON.stringify(data),
        headers: { "Content-Type": "application/json" }
      }).then(res => res.json())
    }
  }
}`);

sdkLines.push(`
// --- Auth SDK ---`);
sdkLines.push(`export function useAuth() {
  return {
    user: { id: "mock-user", role: "admin" },
    signIn: async () => {},
    signOut: async () => {}
  }
}`);

sdkLines.push(`
// --- API SDK ---`);
for (const [name, api] of Object.entries(zap.api)) {
  const fnName = name;
  const method = api.method.toLowerCase();
  const path = api.path;
  sdkLines.push(`export async function ${fnName}(input?: any) {
    const res = await fetch(\`\${BASE_URL}${path}\`, {
      method: "${api.method}",
      headers: { "Content-Type": "application/json" },
      ${api.method !== "GET" ? "body: JSON.stringify(input)," : ""}
    })
    return await res.json()
  }`);
}

// --- DBスキーマ型注入用（自動出力） ---
sdkLines.push(`
// --- DB Schema (for useDB generic) ---`);
sdkLines.push(`const schema = ${JSON.stringify(zap.db, null, 2)} as const;`);

// --- ファイル出力 ---
const outPath = "./sdk/index.ts";
await writeFile(outPath, sdkLines.join("\n"), "utf-8");
console.log(`✅ SDK generated to ${outPath}`);
